<Activity mc:Ignorable="sap sap2010" x:Class="CheckForDuplicateFilenames" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="inout_arrstrPDFFileArray" Type="InOutArgument(s:String[])" />
    <x:Property Name="out_HasErrors" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_strCurrentDomain" Type="InArgument(x:String)" />
    <x:Property Name="in_strMainFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_strBaseFolderPathExternallyAccessed" Type="InArgument(x:String)" />
    <x:Property Name="inout_dtPDFProcessingLog" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="out_drCurrentProcessingLogRecord" Type="OutArgument(s:String[])" />
    <x:Property Name="in_strBaseFolderPath" Type="InArgument(x:String)" />
    <x:Property Name="in_strCurrentMainEmailFileName" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1184,3386</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CheckForDuplicateFilenames_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="134">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Check through the list of PDFs for duplicate filenames and, if found, move aside to unprocessed for manual processing" DisplayName="CheckForDuplicateFilenames" sap:VirtualizedContainerService.HintSize="971,3321" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(x:String)" Name="listConvrtToList" />
      <Variable x:TypeArguments="s:String[]" Name="tempStrArr" />
      <Variable x:TypeArguments="x:String" Name="strTempString" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="909,92" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Duplicate check has started.&quot;]" />
    <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="909,101" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Boolean">[out_HasErrors]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="909,2906" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[inout_arrstrPDFFileArray]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="file1" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="873,2781" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="matchesDuplicateFile" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="811,2670" sap2010:WorkflowViewState.IdRef="TryCatch_1">
              <TryCatch.Try>
                <Sequence sap:VirtualizedContainerService.HintSize="773,2420" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:Matches sap2010:Annotation.AnnotationText="Check if filename contains _number.PDF or - Copy.PDF" BuilderPattern="\s-\sCopy.*.?(?=.[A-Za-z]{3})|_\d{1,2}.?(?=\.[A-Za-z]{3})" sap:VirtualizedContainerService.HintSize="711,91" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[file1]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;\\s-\\sCopy.*.?(?=.[A-Za-z]{3})|_\\d{1,2}.?(?=\\.[A-Za-z]{3})&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="\s-\sCopy.*.?(?=.[A-Za-z]{3})|_\d{1,2}.?(?=\.[A-Za-z]{3})" RegexOption="IgnoreCase, Compiled" Result="[matchesDuplicateFile]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:Matches>
                  <If Condition="[matchesDuplicateFile.Any()]" sap:VirtualizedContainerService.HintSize="711,2178" sap2010:WorkflowViewState.IdRef="If_3">
                    <If.Then>
                      <Sequence sap:VirtualizedContainerService.HintSize="633,1902" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="s:String[]" Name="strDirectories" />
                          <Variable x:TypeArguments="x:String" Name="strNewestFolder" />
                          <Variable x:TypeArguments="x:String" Name="strNewFolderName" />
                          <Variable x:TypeArguments="x:Int32" Name="intNextFolder" />
                          <Variable x:TypeArguments="x:Boolean" Name="boolFileExists" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="571,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[&quot;File &quot; + file1 + &quot; is a duplicate file.&quot;]" />
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="571,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Warn" Message="[&quot;Duplicate found. Moving files to unprocessed&quot;]" />
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RenameCopyFile for File1" sap:VirtualizedContainerService.HintSize="571,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="SupportActivities\RenameCopyFile.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="in_currentFile">[file1]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_Path">[Path.GetDirectoryName(file1)+"\LICATE_"+Path.GetFileNameWithoutExtension(file1)+".PDF"]</InArgument>
                            <InOutArgument x:TypeArguments="sd:DataTable" x:Key="inout_dtProcessingLog">[inout_dtPDFProcessingLog]</InOutArgument>
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_isMove">True</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_TAG">LICATE_</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_currentDomain">[in_strCurrentDomain]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_treatyNumber">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_invoiceNumber">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_referenceNumber">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_copyFrom">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_copyTo">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_NewFileName">["LICATE_"+Path.GetFileNameWithoutExtension(file1)]</InArgument>
                            <OutArgument x:TypeArguments="s:String[]" x:Key="out_drCurrentProcessingLogRecord">[out_drCurrentProcessingLogRecord]</OutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_strBaseFolderPathExternallyAccessed">[in_strBaseFolderPathExternallyAccessed]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_strBaseFolderPath">[in_strBaseFolderPath]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_SectionID">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_SectionTriadID">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                            <OutArgument x:TypeArguments="x:Boolean" x:Key="out_boolProcessedDuplicate" />
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="571,194" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                          <ui:MultipleAssign.AssignOperations>
                            <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="s:String[]">[inout_arrstrPDFFileArray]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="s:String[]">[inout_arrstrPDFFileArray.Where(Function(x) x &lt;&gt; file1).ToArray()]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="s:String[]">[tempStrArr]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="s:String[]">[{Path.GetDirectoryName(file1)+"\LICATE_"+Path.GetFileNameWithoutExtension(file1)+".PDF"}]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="s:String[]">[inout_arrstrPDFFileArray]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="s:String[]">[inout_arrstrPDFFileArray.Concat(tempStrArr).ToArray()]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                              <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                                <ui:AssignOperation.To>
                                  <OutArgument x:TypeArguments="x:String">[strTempString]</OutArgument>
                                </ui:AssignOperation.To>
                                <ui:AssignOperation.Value>
                                  <InArgument x:TypeArguments="x:String">[file1.Replace(matchesDuplicateFile(0).ToString ,"")]</InArgument>
                                </ui:AssignOperation.Value>
                              </ui:AssignOperation>
                            </scg:List>
                          </ui:MultipleAssign.AssignOperations>
                        </ui:MultipleAssign>
                        <ui:FileExistsX DisplayName="File Exists" Exists="[boolFileExists]" sap:VirtualizedContainerService.HintSize="571,133" sap2010:WorkflowViewState.IdRef="FileExistsX_1" Path="[strTempString]" />
                        <If Condition="[boolFileExists]" sap:VirtualizedContainerService.HintSize="571,835" sap2010:WorkflowViewState.IdRef="If_4">
                          <If.Then>
                            <Sequence sap:VirtualizedContainerService.HintSize="493,559" sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="431,92" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Warn" Message="[&quot;Marking original file &quot; + strTempString + &quot; as duplicate.&quot;]" />
                              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke RenameCopyFile for File2" sap:VirtualizedContainerService.HintSize="431,113" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="SupportActivities\RenameCopyFile.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_currentFile">[strTempString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_Path">[Path.GetDirectoryName(strTempString)+"\LICATE_"+Path.GetFileNameWithoutExtension(strTempString)+".PDF"]</InArgument>
                                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="inout_dtProcessingLog">[inout_dtPDFProcessingLog]</InOutArgument>
                                  <InArgument x:TypeArguments="x:Boolean" x:Key="in_isMove">True</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_TAG">LICATE_</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_currentDomain">[in_strCurrentDomain]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_treatyNumber">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_invoiceNumber">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_referenceNumber">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_copyFrom">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_copyTo">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_NewFileName">["LICATE_"+Path.GetFileNameWithoutExtension(strTempString)]</InArgument>
                                  <OutArgument x:TypeArguments="s:String[]" x:Key="out_drCurrentProcessingLogRecord">[out_drCurrentProcessingLogRecord]</OutArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_strBaseFolderPathExternallyAccessed">[in_strBaseFolderPathExternallyAccessed]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_strBaseFolderPath">[in_strBaseFolderPath]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_SectionID">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="in_SectionTriadID">
                                    <Literal x:TypeArguments="x:String" Value="" />
                                  </InArgument>
                                  <OutArgument x:TypeArguments="x:Boolean" x:Key="out_boolProcessedDuplicate" />
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                              <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,163" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                                <ui:MultipleAssign.AssignOperations>
                                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="s:String[]">[inout_arrstrPDFFileArray]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="s:String[]">[inout_arrstrPDFFileArray.Where(Function(x) x &lt;&gt; strTempString).ToArray()]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="s:String[]">[tempStrArr]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="s:String[]">[{Path.GetDirectoryName(strTempString)+"\LICATE_"+Path.GetFileNameWithoutExtension(strTempString)+".PDF"}]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                      <ui:AssignOperation.To>
                                        <OutArgument x:TypeArguments="s:String[]">[inout_arrstrPDFFileArray]</OutArgument>
                                      </ui:AssignOperation.To>
                                      <ui:AssignOperation.Value>
                                        <InArgument x:TypeArguments="s:String[]">[inout_arrstrPDFFileArray.Concat(tempStrArr).ToArray()]</InArgument>
                                      </ui:AssignOperation.Value>
                                    </ui:AssignOperation>
                                  </scg:List>
                                </ui:MultipleAssign.AssignOperations>
                              </ui:MultipleAssign>
                            </Sequence>
                          </If.Then>
                        </If>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="571,92" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Warn" Message="[&quot;Files renamed, continuing processing.&quot;]" />
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </TryCatch.Try>
              <TryCatch.Catches>
                <Catch x:TypeArguments="si:FileNotFoundException" sap:VirtualizedContainerService.HintSize="777,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="si:FileNotFoundException">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="si:FileNotFoundException" Name="exception" />
                    </ActivityAction.Argument>
                    <ui:Continue sap:VirtualizedContainerService.HintSize="334,25" sap2010:WorkflowViewState.IdRef="Continue_1" />
                  </ActivityAction>
                </Catch>
                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="777,21" sap2010:WorkflowViewState.IdRef="Catch`1_2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ActivityAction x:TypeArguments="s:Exception">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="400,369" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,92" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Error encountered during duplicate processing -&gt; &quot; + exception.Message]" />
                      <Assign sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">[out_HasErrors]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Rethrow sap:VirtualizedContainerService.HintSize="338,25" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
                    </Sequence>
                  </ActivityAction>
                </Catch>
              </TryCatch.Catches>
            </TryCatch>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>